# Loss server, has the API to query
apiVersion: apps/v1
kind: Deployment
metadata:
   name: loss-demo
   namespace: default
spec:
   replicas: 1
   selector:
      matchLabels:
         type: loss
   template:
      metadata:
         labels:
            type: loss
      spec:
         containers:
            - name: loss-api
              image: is-this-loss
              imagePullPolicy: Never
---
# Loss entrypoint service: Exposes port on loss
# apiVersion: v1
# kind: Service
# metadata:
#    name: loss-entrypoint
#    namespace: default
# spec:
#    type: NodePort
#    selector:
#       type: loss
#    ports:
#       - port: 80
#         targetPort: 80
#         nodePort: 30001
# ---
# Loss tester: sends a request to the loss server
apiVersion: apps/v1
kind: Deployment
metadata:
   name: loss-test-demo
   namespace: default
spec:
   replicas: 1
   selector:
      matchLabels:
         type: loss-qryer
   template:
      metadata:
         labels:
            type: loss-qryer
      spec:
         containers:
            - name: loss-tester
              image: loss-tester
              imagePullPolicy: Never
              env:
                - name: PYTHONUNBUFFERED
                  value: "1"
---
# Gateway, routes access to loss
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: prod-web
spec:
  gatewayClassName: acme-lb
  listeners:
  - protocol: HTTP
    port: 80
    name: http
---
# Gateway route. IDK How this works
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: foo
spec:
  parentRefs:
  - name: prod-web
  rules:
  - backendRefs:
    - name: loss-entrypoint
      port: 80
